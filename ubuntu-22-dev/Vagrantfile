# vm name 
$name = "tamperpacket-dev"

# ------------------------------------------------------------
# Description
# ------------------------------------------------------------
$description = <<'EOS'

user: vagrant
password: vagrant
EOS

# ------------------------------------------------------------
# install package
# ------------------------------------------------------------
$install_packages = <<'SCRIPT'
# install dependencies
sudo apt update -y
sudo apt upgrade -y

# ssh
sed -i "/PasswordAuthentication/c\PasswordAuthentication yes" /etc/ssh/sshd_config
systemctl restart sshd

DEBIAN_FRONTEND=noninteractive sudo apt upgrade -y
sudo apt install -y bison flex clang gcc llvm libelf-dev bc libssl-dev tmux trace-cmd cmake libdw-dev gcc-multilib libelf-dev

# update iproute2
sudo apt install -y pkg-config bison flex make gcc
cd /tmp
wget https://mirrors.edge.kernel.org/pub/linux/utils/net/iproute2/iproute2-5.5.0.tar.gz
tar -xzvf ./iproute2-5.5.0.tar.gz
cd ./iproute2-5.5.0

sudo make && sudo make install

cd ..

## prepare
sudo apt-get install -y cmake g++ git automake libtool libgc-dev bison flex \
libfl-dev libgmp-dev libboost-dev libboost-iostreams-dev \
libboost-graph-dev llvm pkg-config python python-scapy python-ipaddr python-ply python3-pip tcpdump \
build-essential autoconf libtool curl git libpcap-dev gcc-multilib unzip python3-distutils
sudo apt install linux-tools-$(uname -r) linux-tools-generic

sudo apt install -y libbpf-dev

# install go
wget "https://go.dev/dl/go1.18.3.linux-amd64.tar.gz"
sudo tar -C /usr/local/ -xzf go1.18.3.linux-amd64.tar.gz 
rm go1.18.3.linux-amd64.tar.gz
echo "export PATH=\$PATH:/usr/local/go/bin" >> /home/vagrant/.bashrc
echo "export GOPATH=\$HOME/go" >> /home/vagrant/.bashrc
echo "export PATH=\$PATH:\$GOPATH/bin" >> /home/vagrant/.bashrc
export PATH=$PATH:/usr/local/go/bin


cd /tmp
wget https://github.com/ReFirmLabs/binwalk/archive/master.zip
unzip master.zip
cd binwalk-master && sudo python3 setup.py uninstall && sudo python3 setup.py install

cd /tmp
git clone https://git.kernel.org/pub/scm/devel/pahole/pahole.git
cd pahole
mkdir build
cd build
cmake -D__LIB=lib ..
sudo make install
sudo ldconfig
SCRIPT

# ------------------------------------------------------------
# Show BPF Config
# ------------------------------------------------------------
$show_bpf_config = <<'SCRIPT'
echo "---------- Linux Config ----------"
grep -i CONFIG_BPF /boot/config-$(uname -r)
grep -i CONFIG_XDP_SOCKETS /boot/config-$(uname -r)
SCRIPT


# ------------------------------------------------------------
# VM config
# ------------------------------------------------------------
VAGRANTFILE_API_VERSION = "2"
Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|

  config.vm.hostname = $name
  # config.vm.box = "bento/ubuntu-21.04"
  config.vm.box = "ubuntu/jammy64"

  config.vm.synced_folder "../", "/home/vagrant/share"

  config.vm.provision "shell", inline: $install_packages
  config.vm.provision "shell", inline: $show_bpf_config

  config.vm.provider "virtualbox" do |vb|
    vb.name = $name
    vb.gui = true
    
    vb.cpus = 2
    vb.memory = "2048"

    vb.customize [
      "modifyvm", :id,
      "--vram", "32", 
      "--clipboard", "bidirectional", # clip board
      "--draganddrop", "bidirectional", # drag and drop
      "--ioapic", "on", # enable I/O APIC
      '--graphicscontroller', 'vmsvga',
      "--accelerate3d", "off",
      "--hwvirtex", "on",
      "--nestedpaging", "on",
      "--largepages", "on",
      "--pae", "on",
      '--audio', 'none',
      "--uartmode1", "disconnected",
      "--description", $description
    ]
  end
end
